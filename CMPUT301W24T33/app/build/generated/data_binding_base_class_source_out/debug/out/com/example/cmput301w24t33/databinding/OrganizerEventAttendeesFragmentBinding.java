// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerEventAttendeesFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MapView attendeeMap;

  @NonNull
  public final TextView attendeesCount;

  @NonNull
  public final LinearLayout attendeesCountLayout;

  @NonNull
  public final TextView attendeesCountText;

  @NonNull
  public final RecyclerView eventAttendeesList;

  @NonNull
  public final ConstraintLayout organizerEventAttendeesFragment;

  @NonNull
  public final RelativeLayout profileBackActionbar;

  private OrganizerEventAttendeesFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull MapView attendeeMap, @NonNull TextView attendeesCount,
      @NonNull LinearLayout attendeesCountLayout, @NonNull TextView attendeesCountText,
      @NonNull RecyclerView eventAttendeesList,
      @NonNull ConstraintLayout organizerEventAttendeesFragment,
      @NonNull RelativeLayout profileBackActionbar) {
    this.rootView = rootView;
    this.attendeeMap = attendeeMap;
    this.attendeesCount = attendeesCount;
    this.attendeesCountLayout = attendeesCountLayout;
    this.attendeesCountText = attendeesCountText;
    this.eventAttendeesList = eventAttendeesList;
    this.organizerEventAttendeesFragment = organizerEventAttendeesFragment;
    this.profileBackActionbar = profileBackActionbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerEventAttendeesFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerEventAttendeesFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_event_attendees_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerEventAttendeesFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attendee_map;
      MapView attendeeMap = ViewBindings.findChildViewById(rootView, id);
      if (attendeeMap == null) {
        break missingId;
      }

      id = R.id.attendees_count;
      TextView attendeesCount = ViewBindings.findChildViewById(rootView, id);
      if (attendeesCount == null) {
        break missingId;
      }

      id = R.id.attendees_count_layout;
      LinearLayout attendeesCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (attendeesCountLayout == null) {
        break missingId;
      }

      id = R.id.attendees_count_text;
      TextView attendeesCountText = ViewBindings.findChildViewById(rootView, id);
      if (attendeesCountText == null) {
        break missingId;
      }

      id = R.id.event_attendees_list;
      RecyclerView eventAttendeesList = ViewBindings.findChildViewById(rootView, id);
      if (eventAttendeesList == null) {
        break missingId;
      }

      ConstraintLayout organizerEventAttendeesFragment = (ConstraintLayout) rootView;

      id = R.id.profile_back_actionbar;
      RelativeLayout profileBackActionbar = ViewBindings.findChildViewById(rootView, id);
      if (profileBackActionbar == null) {
        break missingId;
      }

      return new OrganizerEventAttendeesFragmentBinding((ConstraintLayout) rootView, attendeeMap,
          attendeesCount, attendeesCountLayout, attendeesCountText, eventAttendeesList,
          organizerEventAttendeesFragment, profileBackActionbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

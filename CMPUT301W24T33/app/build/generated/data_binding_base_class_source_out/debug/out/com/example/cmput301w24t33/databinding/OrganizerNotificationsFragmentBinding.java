// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerNotificationsFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout actionBarLayout;

  @NonNull
  public final ActionbarGeneralBinding actionbar;

  @NonNull
  public final FloatingActionButton buttonDeleteNotification;

  @NonNull
  public final FloatingActionButton buttonNewNotification;

  @NonNull
  public final RecyclerView notificationsOrganizer;

  @NonNull
  public final RelativeLayout organizerNotificationsFragment;

  private OrganizerNotificationsFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout actionBarLayout, @NonNull ActionbarGeneralBinding actionbar,
      @NonNull FloatingActionButton buttonDeleteNotification,
      @NonNull FloatingActionButton buttonNewNotification,
      @NonNull RecyclerView notificationsOrganizer,
      @NonNull RelativeLayout organizerNotificationsFragment) {
    this.rootView = rootView;
    this.actionBarLayout = actionBarLayout;
    this.actionbar = actionbar;
    this.buttonDeleteNotification = buttonDeleteNotification;
    this.buttonNewNotification = buttonNewNotification;
    this.notificationsOrganizer = notificationsOrganizer;
    this.organizerNotificationsFragment = organizerNotificationsFragment;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerNotificationsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerNotificationsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_notifications_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerNotificationsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar_layout;
      RelativeLayout actionBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (actionBarLayout == null) {
        break missingId;
      }

      id = R.id.actionbar;
      View actionbar = ViewBindings.findChildViewById(rootView, id);
      if (actionbar == null) {
        break missingId;
      }
      ActionbarGeneralBinding binding_actionbar = ActionbarGeneralBinding.bind(actionbar);

      id = R.id.button_delete_notification;
      FloatingActionButton buttonDeleteNotification = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteNotification == null) {
        break missingId;
      }

      id = R.id.button_new_notification;
      FloatingActionButton buttonNewNotification = ViewBindings.findChildViewById(rootView, id);
      if (buttonNewNotification == null) {
        break missingId;
      }

      id = R.id.notifications_organizer;
      RecyclerView notificationsOrganizer = ViewBindings.findChildViewById(rootView, id);
      if (notificationsOrganizer == null) {
        break missingId;
      }

      RelativeLayout organizerNotificationsFragment = (RelativeLayout) rootView;

      return new OrganizerNotificationsFragmentBinding((RelativeLayout) rootView, actionBarLayout,
          binding_actionbar, buttonDeleteNotification, buttonNewNotification,
          notificationsOrganizer, organizerNotificationsFragment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

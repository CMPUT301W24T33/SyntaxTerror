// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerEventSignedUpFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout actionbar;

  @NonNull
  public final RecyclerView eventSignupsList;

  @NonNull
  public final ConstraintLayout organizerEventAttendeesFragment;

  @NonNull
  public final TextView signedupCount;

  @NonNull
  public final LinearLayout signedupCountLayout;

  @NonNull
  public final TextView signedupCountText;

  private OrganizerEventSignedUpFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout actionbar, @NonNull RecyclerView eventSignupsList,
      @NonNull ConstraintLayout organizerEventAttendeesFragment, @NonNull TextView signedupCount,
      @NonNull LinearLayout signedupCountLayout, @NonNull TextView signedupCountText) {
    this.rootView = rootView;
    this.actionbar = actionbar;
    this.eventSignupsList = eventSignupsList;
    this.organizerEventAttendeesFragment = organizerEventAttendeesFragment;
    this.signedupCount = signedupCount;
    this.signedupCountLayout = signedupCountLayout;
    this.signedupCountText = signedupCountText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerEventSignedUpFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerEventSignedUpFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_event_signed_up_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerEventSignedUpFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionbar;
      RelativeLayout actionbar = ViewBindings.findChildViewById(rootView, id);
      if (actionbar == null) {
        break missingId;
      }

      id = R.id.event_signups_list;
      RecyclerView eventSignupsList = ViewBindings.findChildViewById(rootView, id);
      if (eventSignupsList == null) {
        break missingId;
      }

      ConstraintLayout organizerEventAttendeesFragment = (ConstraintLayout) rootView;

      id = R.id.signedup_count;
      TextView signedupCount = ViewBindings.findChildViewById(rootView, id);
      if (signedupCount == null) {
        break missingId;
      }

      id = R.id.signedup_count_layout;
      LinearLayout signedupCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (signedupCountLayout == null) {
        break missingId;
      }

      id = R.id.signedup_count_text;
      TextView signedupCountText = ViewBindings.findChildViewById(rootView, id);
      if (signedupCountText == null) {
        break missingId;
      }

      return new OrganizerEventSignedUpFragmentBinding((ConstraintLayout) rootView, actionbar,
          eventSignupsList, organizerEventAttendeesFragment, signedupCount, signedupCountLayout,
          signedupCountText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

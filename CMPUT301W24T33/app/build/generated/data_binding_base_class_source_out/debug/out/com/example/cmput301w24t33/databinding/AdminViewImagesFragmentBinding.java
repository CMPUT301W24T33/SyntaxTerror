// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminViewImagesFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout adminViewImagesLayout;

  @NonNull
  public final RecyclerView eventPosterRecyclerview;

  @NonNull
  public final MaterialButton switchImagetypeButton;

  @NonNull
  public final RecyclerView userImageRecyclerview;

  private AdminViewImagesFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout adminViewImagesLayout, @NonNull RecyclerView eventPosterRecyclerview,
      @NonNull MaterialButton switchImagetypeButton, @NonNull RecyclerView userImageRecyclerview) {
    this.rootView = rootView;
    this.adminViewImagesLayout = adminViewImagesLayout;
    this.eventPosterRecyclerview = eventPosterRecyclerview;
    this.switchImagetypeButton = switchImagetypeButton;
    this.userImageRecyclerview = userImageRecyclerview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminViewImagesFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminViewImagesFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_view_images_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminViewImagesFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_view_images_layout;
      FrameLayout adminViewImagesLayout = ViewBindings.findChildViewById(rootView, id);
      if (adminViewImagesLayout == null) {
        break missingId;
      }

      id = R.id.event_poster_recyclerview;
      RecyclerView eventPosterRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (eventPosterRecyclerview == null) {
        break missingId;
      }

      id = R.id.switch_imagetype_button;
      MaterialButton switchImagetypeButton = ViewBindings.findChildViewById(rootView, id);
      if (switchImagetypeButton == null) {
        break missingId;
      }

      id = R.id.user_image_recyclerview;
      RecyclerView userImageRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (userImageRecyclerview == null) {
        break missingId;
      }

      return new AdminViewImagesFragmentBinding((ConstraintLayout) rootView, adminViewImagesLayout,
          eventPosterRecyclerview, switchImagetypeButton, userImageRecyclerview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

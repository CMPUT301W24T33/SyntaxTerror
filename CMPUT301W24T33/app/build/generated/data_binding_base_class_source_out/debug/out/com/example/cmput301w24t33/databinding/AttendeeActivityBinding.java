// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttendeeActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout attendeeActivity;

  @NonNull
  public final FrameLayout attendeeLayout;

  @NonNull
  public final CardView checkInCardView;

  @NonNull
  public final ImageView checkInImg;

  @NonNull
  public final RecyclerView eventrecyclerview;

  @NonNull
  public final CardView findEventCardView;

  @NonNull
  public final ImageView findEventImg;

  @NonNull
  public final MaterialButton switchEventsButton;

  private AttendeeActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout attendeeActivity, @NonNull FrameLayout attendeeLayout,
      @NonNull CardView checkInCardView, @NonNull ImageView checkInImg,
      @NonNull RecyclerView eventrecyclerview, @NonNull CardView findEventCardView,
      @NonNull ImageView findEventImg, @NonNull MaterialButton switchEventsButton) {
    this.rootView = rootView;
    this.attendeeActivity = attendeeActivity;
    this.attendeeLayout = attendeeLayout;
    this.checkInCardView = checkInCardView;
    this.checkInImg = checkInImg;
    this.eventrecyclerview = eventrecyclerview;
    this.findEventCardView = findEventCardView;
    this.findEventImg = findEventImg;
    this.switchEventsButton = switchEventsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttendeeActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttendeeActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attendee_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttendeeActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout attendeeActivity = (ConstraintLayout) rootView;

      id = R.id.attendee_layout;
      FrameLayout attendeeLayout = ViewBindings.findChildViewById(rootView, id);
      if (attendeeLayout == null) {
        break missingId;
      }

      id = R.id.check_in_card_view;
      CardView checkInCardView = ViewBindings.findChildViewById(rootView, id);
      if (checkInCardView == null) {
        break missingId;
      }

      id = R.id.check_in_img;
      ImageView checkInImg = ViewBindings.findChildViewById(rootView, id);
      if (checkInImg == null) {
        break missingId;
      }

      id = R.id.eventrecyclerview;
      RecyclerView eventrecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (eventrecyclerview == null) {
        break missingId;
      }

      id = R.id.find_event_card_view;
      CardView findEventCardView = ViewBindings.findChildViewById(rootView, id);
      if (findEventCardView == null) {
        break missingId;
      }

      id = R.id.find_event_img;
      ImageView findEventImg = ViewBindings.findChildViewById(rootView, id);
      if (findEventImg == null) {
        break missingId;
      }

      id = R.id.switch_events_button;
      MaterialButton switchEventsButton = ViewBindings.findChildViewById(rootView, id);
      if (switchEventsButton == null) {
        break missingId;
      }

      return new AttendeeActivityBinding((ConstraintLayout) rootView, attendeeActivity,
          attendeeLayout, checkInCardView, checkInImg, eventrecyclerview, findEventCardView,
          findEventImg, switchEventsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

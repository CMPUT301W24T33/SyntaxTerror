// Generated by view binder compiler. Do not edit!
package com.example.cmput301w24t33.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cmput301w24t33.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerCreateEditEventFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final TextInputEditText endDateEditText;

  @NonNull
  public final TextInputLayout endDateInputLayout;

  @NonNull
  public final TextInputEditText endTimeEditText;

  @NonNull
  public final TextInputLayout endTimeInputLayout;

  @NonNull
  public final TextInputEditText eventDescriptionEditText;

  @NonNull
  public final TextInputLayout eventDescriptionInputLayout;

  @NonNull
  public final TextInputLayout eventLocationCordsLayout;

  @NonNull
  public final TextInputEditText eventLocationCordsText;

  @NonNull
  public final TextInputEditText eventLocationEditText;

  @NonNull
  public final TextInputLayout eventLocationInputLayout;

  @NonNull
  public final TextInputEditText eventNameEditText;

  @NonNull
  public final TextInputLayout eventNameInputLayout;

  @NonNull
  public final MaterialButton generateQrCodeButton;

  @NonNull
  public final SwitchMaterial geoTrackingSwitch;

  @NonNull
  public final TextInputEditText maxAttendeesEditText;

  @NonNull
  public final TextInputLayout maxAttendeesInputLayout;

  @NonNull
  public final TextInputEditText startDateEditText;

  @NonNull
  public final TextInputLayout startDateInputLayout;

  @NonNull
  public final TextInputEditText startTimeEditText;

  @NonNull
  public final TextInputLayout startTimeInputLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final MaterialButton uploadPosterButton;

  private OrganizerCreateEditEventFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button cancelButton, @NonNull Button confirmButton,
      @NonNull TextInputEditText endDateEditText, @NonNull TextInputLayout endDateInputLayout,
      @NonNull TextInputEditText endTimeEditText, @NonNull TextInputLayout endTimeInputLayout,
      @NonNull TextInputEditText eventDescriptionEditText,
      @NonNull TextInputLayout eventDescriptionInputLayout,
      @NonNull TextInputLayout eventLocationCordsLayout,
      @NonNull TextInputEditText eventLocationCordsText,
      @NonNull TextInputEditText eventLocationEditText,
      @NonNull TextInputLayout eventLocationInputLayout,
      @NonNull TextInputEditText eventNameEditText, @NonNull TextInputLayout eventNameInputLayout,
      @NonNull MaterialButton generateQrCodeButton, @NonNull SwitchMaterial geoTrackingSwitch,
      @NonNull TextInputEditText maxAttendeesEditText,
      @NonNull TextInputLayout maxAttendeesInputLayout,
      @NonNull TextInputEditText startDateEditText, @NonNull TextInputLayout startDateInputLayout,
      @NonNull TextInputEditText startTimeEditText, @NonNull TextInputLayout startTimeInputLayout,
      @NonNull MaterialToolbar toolbar, @NonNull MaterialButton uploadPosterButton) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.confirmButton = confirmButton;
    this.endDateEditText = endDateEditText;
    this.endDateInputLayout = endDateInputLayout;
    this.endTimeEditText = endTimeEditText;
    this.endTimeInputLayout = endTimeInputLayout;
    this.eventDescriptionEditText = eventDescriptionEditText;
    this.eventDescriptionInputLayout = eventDescriptionInputLayout;
    this.eventLocationCordsLayout = eventLocationCordsLayout;
    this.eventLocationCordsText = eventLocationCordsText;
    this.eventLocationEditText = eventLocationEditText;
    this.eventLocationInputLayout = eventLocationInputLayout;
    this.eventNameEditText = eventNameEditText;
    this.eventNameInputLayout = eventNameInputLayout;
    this.generateQrCodeButton = generateQrCodeButton;
    this.geoTrackingSwitch = geoTrackingSwitch;
    this.maxAttendeesEditText = maxAttendeesEditText;
    this.maxAttendeesInputLayout = maxAttendeesInputLayout;
    this.startDateEditText = startDateEditText;
    this.startDateInputLayout = startDateInputLayout;
    this.startTimeEditText = startTimeEditText;
    this.startTimeInputLayout = startTimeInputLayout;
    this.toolbar = toolbar;
    this.uploadPosterButton = uploadPosterButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerCreateEditEventFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerCreateEditEventFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_create_edit_event_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerCreateEditEventFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.confirm_button;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.end_date_edit_text;
      TextInputEditText endDateEditText = ViewBindings.findChildViewById(rootView, id);
      if (endDateEditText == null) {
        break missingId;
      }

      id = R.id.end_date_input_layout;
      TextInputLayout endDateInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (endDateInputLayout == null) {
        break missingId;
      }

      id = R.id.end_time_edit_text;
      TextInputEditText endTimeEditText = ViewBindings.findChildViewById(rootView, id);
      if (endTimeEditText == null) {
        break missingId;
      }

      id = R.id.end_time_input_layout;
      TextInputLayout endTimeInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (endTimeInputLayout == null) {
        break missingId;
      }

      id = R.id.event_description_edit_text;
      TextInputEditText eventDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.event_description_input_layout;
      TextInputLayout eventDescriptionInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventDescriptionInputLayout == null) {
        break missingId;
      }

      id = R.id.event_location_cords_layout;
      TextInputLayout eventLocationCordsLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationCordsLayout == null) {
        break missingId;
      }

      id = R.id.event_location_cords_text;
      TextInputEditText eventLocationCordsText = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationCordsText == null) {
        break missingId;
      }

      id = R.id.event_location_edit_text;
      TextInputEditText eventLocationEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationEditText == null) {
        break missingId;
      }

      id = R.id.event_location_input_layout;
      TextInputLayout eventLocationInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventLocationInputLayout == null) {
        break missingId;
      }

      id = R.id.event_name_edit_text;
      TextInputEditText eventNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (eventNameEditText == null) {
        break missingId;
      }

      id = R.id.event_name_input_layout;
      TextInputLayout eventNameInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (eventNameInputLayout == null) {
        break missingId;
      }

      id = R.id.generate_qr_code_button;
      MaterialButton generateQrCodeButton = ViewBindings.findChildViewById(rootView, id);
      if (generateQrCodeButton == null) {
        break missingId;
      }

      id = R.id.geo_tracking_switch;
      SwitchMaterial geoTrackingSwitch = ViewBindings.findChildViewById(rootView, id);
      if (geoTrackingSwitch == null) {
        break missingId;
      }

      id = R.id.max_attendees_edit_text;
      TextInputEditText maxAttendeesEditText = ViewBindings.findChildViewById(rootView, id);
      if (maxAttendeesEditText == null) {
        break missingId;
      }

      id = R.id.max_attendees_input_layout;
      TextInputLayout maxAttendeesInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (maxAttendeesInputLayout == null) {
        break missingId;
      }

      id = R.id.start_date_edit_text;
      TextInputEditText startDateEditText = ViewBindings.findChildViewById(rootView, id);
      if (startDateEditText == null) {
        break missingId;
      }

      id = R.id.start_date_input_layout;
      TextInputLayout startDateInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (startDateInputLayout == null) {
        break missingId;
      }

      id = R.id.start_time_edit_text;
      TextInputEditText startTimeEditText = ViewBindings.findChildViewById(rootView, id);
      if (startTimeEditText == null) {
        break missingId;
      }

      id = R.id.start_time_input_layout;
      TextInputLayout startTimeInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (startTimeInputLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.upload_poster_button;
      MaterialButton uploadPosterButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadPosterButton == null) {
        break missingId;
      }

      return new OrganizerCreateEditEventFragmentBinding((ConstraintLayout) rootView, cancelButton,
          confirmButton, endDateEditText, endDateInputLayout, endTimeEditText, endTimeInputLayout,
          eventDescriptionEditText, eventDescriptionInputLayout, eventLocationCordsLayout,
          eventLocationCordsText, eventLocationEditText, eventLocationInputLayout,
          eventNameEditText, eventNameInputLayout, generateQrCodeButton, geoTrackingSwitch,
          maxAttendeesEditText, maxAttendeesInputLayout, startDateEditText, startDateInputLayout,
          startTimeEditText, startTimeInputLayout, toolbar, uploadPosterButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
